@model Llibreria.Models.Lloguer

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Lloguer</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })




    <div class="form-group">
        @Html.LabelFor(model => model.IDcopies, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* @Html.EditorFor(model => model.ClientID, new { htmlAttributes = new { @class = "form-control",
                  } })
                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })*@
            @if (ViewBag.movie == null)
            {
                using (Html.BeginForm("UpdateValues", "Copies"))
                {
                    @Html.DropDownListFor(model => model.IDcopies, (IEnumerable<SelectListItem>)ViewBag.llistaMovies, new { onchange = "canviar();this.form.submit();" })
                }
            }
            else
            {
                @Html.EditorFor(model => model.IDcopies, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.IDcopies, "", new { @class = "text-danger" })

            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.numCopia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* @Html.EditorFor(model => model.ClientID, new { htmlAttributes = new { @class = "form-control",
                  } })
                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })*@
            @if (ViewBag.copies == null)
            {
                @Html.DropDownListFor(model => model.numCopia, (IEnumerable<SelectListItem>)ViewBag.llistaCopies, null, new { @class = "form-control" })
            }
            else
            {

                @Html.EditorFor(model => model.numCopia, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.numCopia, "", new { @class = "text-danger" })

            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ClientID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* @Html.EditorFor(model => model.ClientID, new { htmlAttributes = new { @class = "form-control",
                  } })
                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })*@
            @if (ViewBag.client == null)
            {
                @Html.DropDownListFor(model => model.ClientID, (IEnumerable<SelectListItem>)ViewBag.llistaClients, null, new { @class = "form-control" })
            }
            else
            {
                @Html.EditorFor(model => model.ClientID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ClientID, "", new { @class = "text-danger" })

            }
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.DataInici, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataInici, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.DataInici, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataFi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataFi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataFi, "", new { @class = "text-danger" })
        </div>
    </div>
    @*
           <div class="form-group">
               @Html.LabelFor(model => model.DataReal, htmlAttributes: new { @class = "control-label col-md-2" })
               <div class="col-md-10">
                   @Html.EditorFor(model => model.DataReal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                   @Html.ValidationMessageFor(model => model.DataReal, "", new { @class = "text-danger" })
               </div>
           </div>

        <div class="form-group">
                   @Html.LabelFor(model => model.Perdut, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       <div class="checkbox">
                           @Html.EditorFor(model => model.Perdut)
                           @Html.ValidationMessageFor(model => model.Perdut, "", new { @class = "text-danger" })
                       </div>
                   </div>
               </div>

               <div class="form-group">
                   @Html.LabelFor(model => model.Amortitzat, htmlAttributes: new { @class = "control-label col-md-2" })
                   <div class="col-md-10">
                       <div class="checkbox">
                           @Html.EditorFor(model => model.Amortitzat)
                           @Html.ValidationMessageFor(model => model.Amortitzat, "", new { @class = "text-danger" })
                       </div>
                   </div>
               </div>*@
    <input type="hidden" id="secret" value="1" name="v" />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>

    function canviar() {
        document.getElementById("secret").value = "0";
    }

</script>